class DemoWhile 
{
	public static void main(String[] args) 
	{
		//1.计算[100,200]内所有奇数的和
		int price = 0;
		int i1=100;
		while (i1<=200)
		{
			if(i1%2 != 0){
				price += i1;
			}
			i1++;
		}
		System.out.println(price);
		
		//2.打印[1,100]内的所有不是7的倍数的数字，每9个一行，并统计有多少个数字是7的倍数。
		//
				int price1 = 0; //个数
		int num = 1;
		while (num <= 100)
		{
			if(num % 7 != 0){// 不是7的倍数
				price1++;//个数相加
				System.out.print(num+"\t");
				if(price1 % 9 ==0){
					System.out.println();
				}
			}
			num++;
		}
		System.out.println("不是7的倍数的数有"+ (100-price1) +"个。");
		//3.打印[97,150]区间内每个整数对应的字符，每个10个字符一行
		int geshu = 1;
		int num3 = 97;
		while(num3<=150){
			geshu++;
			System.out.print((char)num3);
			if(geshu % 10 == 0){
			System.out.println();
			}
			num3++;
		}
System.out.println();
System.out.println("-------------------------------------------");
		//4.使用for循环打印以下形状
		/*
			********
			********
			********
			********
		*/
		for (int x1=1;x1<=4 ;x1++ )
		{
			for (int y1=1;y1<=8 ;y1++ )
			{
				System.out.print("*");
			}
			System.out.println();
		}
System.out.println("-------------------------------------------");
		/*
			②
			*	1--1	j=i
			**	2--2
			***	3--3
			****	4--4
			*****	5--5
		*/
		for (int x2=1;x2<=5 ;x2++ )
		{
			for (int y2=1;y2<=x2 ;y2++ )
			{
				System.out.print("*");
			}
			System.out.println();
		}

		System.out.println("-------------------------------------------");
		/*
			③
			*			1--1  j=2*i-1
			***			2--3
			*****		3--5
			*******		4--7
			*********	5--9
		*/
		int yy3 = 1;
		for (int x3=1;x3<=5 ;x3++ )
		{
			for (int y3=1;y3<=yy3 ;y3++ )
			{
				System.out.print("*");	
			}
			yy3+=2;
			System.out.println();
		}
System.out.println("-------------------------------------------");
		/*
			④
				*		1--4 i+j=5 j=2*i-1
			   ***		2--3
			  *****		3--2
			 *******	4--1
			*********	5--0
		*/
		int yy4 = 4;
		int kk4 = 1;
		for (int x4=1;x4<=5 ;x4++ )
		{
			for (int y4=yy4; y4>=0; --y4)
			{
				
				System.out.print("/");
				for(int z4=1;z4<=kk4;z4++){
					System.out.print("*");
				}
			}
			kk4++;
			yy4--;
			System.out.println();
		}


	}
}
